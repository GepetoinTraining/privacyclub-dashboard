// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// ---
// SECTION 1: ENUMERATIONS (For Type Safety)
// ---

enum ClientStatus {
  new
  regular
  vip
  whale
}

enum HostStatus {
  new
  rising_star
  top_performer
  on_probation
}

enum StaffRole {
  Server
  Bartender
  Cashier
  Security
  Admin // <-- Added Admin role
}

enum EnvironmentType {
  Public
  VIP
  PrivateBooth
}

enum SmallestUnit {
  ml
  unit
}

enum StockMovementType {
  purchase
  sale
  waste
  adjustment
  consignment_stock_in
}

enum HostShiftStatus {
  available
  reserved
}

enum StaffCommissionType {
  sale
  cac_bonus
  cac_lifetime_percentage
}

// ---
// SECTION 2: CORE ENTITIES (People & Partners)
// ---

model Client {
  id                  Int      @id @default(autoincrement())
  name                String?
  phoneNumber         String?  @unique
  createdAt           DateTime @default(now())
  status              ClientStatus @default(new)
  totalVisits         Int      @default(0)
  lastVisitDate       DateTime?
  avgSpendPerVisit    Decimal  @default(0)
  lastVisitSpend      Decimal  @default(0)
  lifetimeSpend       Decimal  @default(0)
  primaryPreferenceName String?
  crmData             Json

  // Relation for CAC
  acquiredByStaffId   Int?
  acquiredByStaff     Staff?   @relation("AcquiredClients", fields: [acquiredByStaffId], references: [id])

  // Relations to other tables
  visits              Visit[]
  staffCommissions    StaffCommission[] @relation("ClientCommissions")

  @@index([acquiredByStaffId])
}

model Host {
  id                 Int        @id @default(autoincrement())
  stageName          String     @unique
  commissionRate     Decimal
  isActive           Boolean    @default(true)
  createdAt          DateTime   @default(now())
  status             HostStatus @default(new)
  baseRate           Decimal?
  isRateNegotiable   Boolean    @default(true)
  profileData        Json

  // Relations
  shifts HostShift[]
  sales  Sale[]
}

model Staff {
  id            Int      @id @default(autoincrement())
  name          String
  defaultRole   StaffRole
  pinCode       String   @unique // <-- Made PIN unique
  isActive      Boolean  @default(true)
  createdAt     DateTime @default(now())

  // Relations
  acquiredClients Client[]            @relation("AcquiredClients")
  shifts          StaffShift[]
  commissions     StaffCommission[]
}

model Partner {
  id           Int      @id @default(autoincrement())
  companyName  String   @unique
  contactPerson String?
  contactPhone String?
  createdAt    DateTime @default(now())

  // Relations
  leases       SpaceLease[]
  products     Product[]
  payouts      PartnerPayout[]
}

// ---
// SECTION 3: PHYSICAL SPACES & INVENTORY
// ---

model Environment {
  id        Int      @id @default(autoincrement())
  name      String
  capacity  Int?
  type      EnvironmentType

  // Relations
  displaySpaces      DisplaySpace[]
  visits             Visit[]
  hostShifts         HostShift[]
  staffShifts        StaffShift[]
  activeInteractions ActiveInteraction[]
}

model DisplaySpace {
  id                      Int      @id @default(autoincrement())
  name                    String
  defaultMonthlyLeaseFee  Decimal

  // Relations
  environmentId           Int
  environment             Environment @relation(fields: [environmentId], references: [id])
  leases                  SpaceLease[]

  @@index([environmentId])
}

model InventoryItem {
  id                            Int       @id @default(autoincrement())
  name                          String
  storageUnitName               String?
  smallestUnit                  SmallestUnit
  storageUnitSizeInSmallest     Decimal?  @default(1)
  reorderThresholdInSmallest    Decimal?

  // Relations
  products           Product[]
  stockLedgerEntries StockLedger[]
}

model Product {
  id                              Int      @id @default(autoincrement())
  name                            String
  category                        String?
  costPrice                       Decimal
  salePrice                       Decimal
  deductionAmountInSmallestUnit   Decimal?

  // Relations
  inventoryItemId   Int?
  inventoryItem     InventoryItem? @relation(fields: [inventoryItemId], references: [id])

  partnerId         Int?
  partner           Partner?       @relation(fields: [partnerId], references: [id])
  
  sales             Sale[]
  promotions        PromotionBulletin[]

  @@index([inventoryItemId])
  @@index([partnerId])
}

// ---
// SECTION 4: AGREEMENTS & "LIVE" SESSIONS
// ---

model SpaceLease {
  id              Int      @id @default(autoincrement())
  startDate       DateTime @db.Date
  endDate         DateTime @db.Date
  agreedMonthlyFee Decimal

  // Relations
  partnerId       Int
  partner         Partner  @relation(fields: [partnerId], references: [id])
  displaySpaceId  Int
  displaySpace    DisplaySpace @relation(fields: [displaySpaceId], references: [id])

  @@index([partnerId])
  @@index([displaySpaceId])
}

model Visit {
  id                         Int       @id @default(autoincrement())
  entryTime                  DateTime  @default(now())
  exitTime                   DateTime?
  entryFeePaid               Decimal   @default(200.00)
  consumableCreditTotal      Decimal   @default(100.00)
  consumableCreditRemaining  Decimal   @default(100.00)

  // Relations
  clientId                   Int?
  client                     Client?   @relation(fields: [clientId], references: [id])
  currentEnvironmentId       Int?
  currentEnvironment         Environment? @relation(fields: [currentEnvironmentId], references: [id])
  
  sales                      Sale[]
  activeInteractions         ActiveInteraction[]

  @@index([clientId])
  @@index([currentEnvironmentId])
}

model HostShift {
  id                   Int       @id @default(autoincrement())
  clockIn              DateTime  @default(now())
  clockOut             DateTime?
  clockOutReason       String?
  liveStatus           HostShiftStatus @default(available)

  // Relations
  hostId               Int
  host                 Host      @relation(fields: [hostId], references: [id])
  currentEnvironmentId Int?
  currentEnvironment   Environment? @relation(fields: [currentEnvironmentId], references: [id])
  
  activeInteractions   ActiveInteraction[]

  @@index([hostId])
  @@index([currentEnvironmentId])
}

model StaffShift {
  id                   Int       @id @default(autoincrement())
  clockIn              DateTime  @default(now())
  clockOut             DateTime?
  roleForShift         StaffRole

  // Relations
  staffId              Int
  staff                Staff     @relation(fields: [staffId], references: [id])
  currentEnvironmentId Int?
  currentEnvironment   Environment? @relation(fields: [currentEnvironmentId], references: [id])
  
  sales                Sale[]

  @@index([staffId])
  @@index([currentEnvironmentId])
}

model ActiveInteraction {
  id             Int       @id @default(autoincrement())
  startTime      DateTime  @default(now())
  endTime        DateTime?

  // Relations
  visitId        Int
  visit          Visit     @relation(fields: [visitId], references: [id])
  shiftId        Int
  shift          HostShift @relation(fields: [shiftId], references: [id])
  environmentId  Int
  environment    Environment @relation(fields: [environmentId], references: [id])

  @@index([visitId])
  @@index([shiftId])
  @@index([environmentId])
}

// ---
// SECTION 5: TRANSACTIONS & LEDGERS
// ---

model Sale {
  id                 Int       @id @default(autoincrement())
  quantity           Int       @default(1)
  priceAtSale        Decimal
  commissionEarned   Decimal   // Host commission
  paidWithCredit     Decimal   @default(0)
  paidWithCashCard   Decimal   @default(0)
  createdAt          DateTime  @default(now())

  // Relations
  visitId            Int
  visit              Visit     @relation(fields: [visitId], references: [id])
  hostId             Int
  host               Host      @relation(fields: [hostId], references: [id])
  productId          Int
  product            Product   @relation(fields: [productId], references: [id])
  staffShiftId       Int?
  staffShift         StaffShift? @relation(fields: [staffShiftId], references: [id])
  
  stockLedgerEntries StockLedger[]
  staffCommissions   StaffCommission[]
  partnerPayouts     PartnerPayout[]

  @@index([visitId])
  @@index([hostId])
  @@index([productId])
  @@index([staffShiftId])
}

model StockLedger {
  id             Int               @id @default(autoincrement())
  movementType    StockMovementType
  quantityChange  Decimal
  notes           String?
  createdAt       DateTime          @default(now()) // <-- Added default value

  // Relations
  inventoryItemId Int
  inventoryItem   InventoryItem @relation(fields: [inventoryItemId], references: [id])
  saleId          Int?
  sale            Sale?         @relation(fields: [saleId], references: [id], onDelete: SetNull)

  @@index([inventoryItemId])
  @@index([saleId])
}

model StaffCommission {
  id              Int                 @id @default(autoincrement()) // <-- FIX: Was autDoincrement()
  commissionType  StaffCommissionType
  amountEarned    Decimal
  isPaidOut       Boolean             @default(false)
  notes           String?
  createdAt       DateTime            @default(now())

  // Relations
  staffId         Int
  staff           Staff               @relation(fields: [staffId], references: [id])
  relatedSaleId   Int?
  relatedSale     Sale?               @relation(fields: [relatedSaleId], references: [id], onDelete: SetNull)
  relatedClientId Int?
  relatedClient   Client?             @relation("ClientCommissions", fields: [relatedClientId], references: [id], onDelete: SetNull)

  @@index([staffId])
  @@index([relatedSaleId])
  @@index([relatedClientId])
}

model PartnerPayout {
  id         Int      @id @default(autoincrement())
  amountDue  Decimal
  isPaidOut  Boolean  @default(false)
  createdAt  DateTime @default(now())

  // Relations
  partnerId  Int
  partner    Partner  @relation(fields: [partnerId], references: [id])
  saleId     Int
  sale       Sale     @relation(fields: [saleId], references: [id])

  @@index([partnerId])
  @@index([saleId])
}

// ---
// SECTION 6: PROMOTIONS
// ---

model PromotionBulletin {
  id          Int       @id @default(autoincrement())
  title       String
  body        String
  bonusOffer  String?
  createdAt   DateTime  @default(now())
  expiresAt   DateTime

  // Relations
  productId   Int?
  product     Product?  @relation(fields: [productId], references: [id])

  @@index([productId])
}



